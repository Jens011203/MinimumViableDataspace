version: "3.9"
services:

  # EDC Connector to simulate a dataspace participant acting as a data provider which is located in EU.

  company1:
    container_name: company1
    build:
      context: ../launchers/rest-connector
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    environment:
      EDC_DSP_CALLBACK_ADDRESS: http://company1:8282/api/dsp
      EDC_CONNECTOR_NAME: company1
      EDC_PARTICIPANT_ID: did:web:did-server:company1
      EDC_BLOBSTORE_ENDPOINT_TEMPLATE: "http://azurite:10000/%s"
      EDC_IDENTITY_DID_URL: did:web:did-server:company1
      EDC_VAULT: /resources/vault/company1/company1-vault.properties
      EDC_KEYSTORE: /resources/vault/company1/company1-keystore.jks
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: /resources/self-description/company1/sdd.json
      EDC_KEYSTORE_PASSWORD: test123
      EDC_API_AUTH_KEY: ApiKeyDefaultValue
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS: 5
      EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS: 5
      EDC_CATALOG_CACHE_PARTITION_NUM_CRAWLERS: 5
      EDC_CONTROL_ENDPOINT: http://company1:8383/api/control
      EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: http://company1:8383/api/control/token
      REGISTRATION_SERVICE_API_URL: http://registration-service:8184/api/authority
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
      EDC_FS_CONFIG: /app/launchers/rest-connector/config.properties


    depends_on:
      - did-server
      - azurite
      - registration-service
    ports:
      - "9191:9191"
      - "8181:8181"
      - "5005:5005"
      - "7171:7171"
      - "8383:8383"
    volumes:
      - ./resources:/resources
      - /Users/I572661/Documents/Praxisphase/Praxisphase Innovation Energy/results:/app/resources
      - /Users/I572661/Documents/Praxisphase/Praxisphase Innovation Energy/MinimumViableDataspace/launchers/rest-connector:/app/launchers/rest-connector


  # EDC Connector to simulate a dataspace participant acting as a data consumer which is located in EU.
  company2:
    container_name: company2
    build:
      context: ../launchers/rest-connector
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006"
    environment:
      EDC_DSP_CALLBACK_ADDRESS: http://company2:8282/api/dsp
      EDC_CONNECTOR_NAME: company2
      EDC_PARTICIPANT_ID: did:web:did-server:company2
      EDC_BLOBSTORE_ENDPOINT_TEMPLATE: "http://azurite:10000/%s"
      EDC_IDENTITY_DID_URL: did:web:did-server:company2
      EDC_VAULT: /resources/vault/company2/company2-vault.properties
      EDC_KEYSTORE: /resources/vault/company2/company2-keystore.jks
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: /resources/self-description/company2/sdd.json
      EDC_KEYSTORE_PASSWORD: test123
      EDC_API_AUTH_KEY: ApiKeyDefaultValue
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS: 5
      EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS: 5
      EDC_CATALOG_CACHE_PARTITION_NUM_CRAWLERS: 5
      EDC_CONTROL_ENDPOINT: http://company2:8383/api/control
      EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: http://company2:8383/api/control/token
      REGISTRATION_SERVICE_API_URL: http://registration-service:8184/api/authority
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
      EDC_FS_CONFIG: /app/launchers/rest-connector/config.properties

    depends_on:
      - did-server
      - azurite
      - registration-service
    ports:
      - "9192:9191"
      - "8182:8181"
      - "5006:5006"
      - "7172:7171"
      - "8384:8383"
    volumes:
      - ./resources:/resources
      - /Users/I572661/Documents/Praxisphase/Praxisphase Innovation Energy/MinimumViableDataspace/launchers/rest-connector:/app/launchers/rest-connector

  # EDC Connector to simulate a dataspace participant acting as a consumer which is located in US.
  company3:
    container_name: company3
    build:
      context: ../launchers/rest-connector
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007"
    environment:
      EDC_DSP_CALLBACK_ADDRESS: http://company3:8282/api/dsp
      EDC_CONNECTOR_NAME: company3
      EDC_PARTICIPANT_ID: did:web:did-server:company3

      EDC_BLOBSTORE_ENDPOINT_TEMPLATE: "http://azurite:10000/%s"
      EDC_IDENTITY_DID_URL: did:web:did-server:company3
      EDC_VAULT: /resources/vault/company3/company3-vault.properties
      EDC_KEYSTORE: /resources/vault/company3/company3-keystore.jks
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: /resources/self-description/company3/sdd.json
      EDC_KEYSTORE_PASSWORD: test123
      EDC_API_AUTH_KEY: ApiKeyDefaultValue
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CATALOG_CACHE_EXECUTION_DELAY_SECONDS: 5
      EDC_CATALOG_CACHE_EXECUTION_PERIOD_SECONDS: 5
      EDC_CATALOG_CACHE_PARTITION_NUM_CRAWLERS: 5
      EDC_CONTROL_ENDPOINT: http://company2:8383/api/control
      EDC_DATAPLANE_TOKEN_VALIDATION_ENDPOINT: http://company3:8383/api/control/token
      REGISTRATION_SERVICE_API_URL: http://registration-service:8184/api/authority
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "origin,content-type,accept,authorization,x-api-key"
    depends_on:
      - did-server
      - azurite
      - registration-service
    ports:
      - "9193:9191"
      - "8183:8181"
      - "5007:5007"
      - "7173:7171"
    volumes:
      - ./resources:/resources

  # Data Dashboard (MVD UI) for participant company3
  company3-datadashboard:
    container_name: company3-datadashboard
    build:
      context: ~/Documents/GitHub/DataDashboard
    volumes:
      - ./resources/appconfig/company3:/usr/share/nginx/html/assets/config
    depends_on:
      company3:
        condition: service_healthy
    ports:
      - "7082:80"
    profiles: [ "ui" ]

  # Usages postman collections for initial data seeding to connectors.
  newman:
    container_name: newman
    image: postman/newman:ubuntu
    entrypoint: /bin/bash
    command: deployment/seed-data.sh
    volumes:
      - ../deployment/:/deployment
    working_dir: /
    environment:
      API_KEY: ApiKeyDefaultValue
      EDC_HOST: company1:company2:company3
      ASSETS_STORAGE_ACCOUNT: company1assets:company2assets:company3assets
      PARTICIPANT_ID: company1:company2:company3
    depends_on:
      company1:
        condition: service_healthy
      company2:
        condition: service_healthy
      company3:
        condition: service_healthy

  # A nginx based HTTP server to serve dataspace participants DIDs.
  did-server:
    container_name: did-server
    image: nginx
    volumes:
      - ./resources/webdid:/usr/share/nginx/html
    ports:
      - "7070:80"

  # Azure blob storage simulator.
  azurite:
    container_name: azurite
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - 10000:10000
    environment:
      AZURITE_ACCOUNTS: company1assets:key1;company2assets:key2;company3assets:key3

  rest-api:
    container_name: rest-api
    build: ../rest_api
    ports:
      - "8080:8080"

  consumer-rest-api:
    container_name: consumer-rest-api
    build: ../consumer_rest_api
    ports:
      - "8081:8081"
    volumes:
      - /Users/I572661/Documents/Praxisphase/Praxisphase Innovation Energy/MinimumViableDataspace/consumer_rest_api/src/main/resources:/app/resources


  kafka-provider:
    image: 'bitnami/kafka:latest'
    container_name: kafka-provider
    ports:
      - "9092:9092"
      - "9093:9093"
#      - "9097:9097"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-consumer:9092,EXTERNAL://localhost:9097
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-provider:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_REQUEST_TIMEOUT_MS= 3000000
      - KAFKA_MESSAGE_MAX_BYTES= 2000000000
      - KAFKA_REPLICA_FETCH_MAX_BYTES= 2000000000
      - KAFKA_CONSUMER_FETCH_MAX_BYTES= 2000000000
      - KAFKA_PRODUCER_CFG_DELIVERY_TIMEOUT_MS=3000000


  kafka-consumer:
    image: 'bitnami/kafka:latest'
    container_name: kafka-consumer
    ports:
      - "9094:9094"
#      - "9095:9095"
      - "9096:9096"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9094,CONTROLLER://:9096
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-consumer:9094,EXTERNAL://localhost:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT, PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-consumer:9096
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_REQUEST_TIMEOUT_MS= 3000000
      - KAFKA_MESSAGE_MAX_BYTES= 2000000000
      - KAFKA_REPLICA_FETCH_MAX_BYTES= 2000000000
      - KAFKA_CONSUMER_FETCH_MAX_BYTES= 2000000000
      - KAFKA_PRODUCER_CFG_DELIVERY_TIMEOUT_MS=3000000


  # Dataspace registration service authority.
  registration-service:
    container_name: registration-service
    build:
      #e.g. /home/user/RegistrationService/launcher
      context: ../launchers/registrationservice
      args:
        JVM_ARGS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008"
    environment:
      JWT_AUDIENCE: http://registration-service:8184/api/authority
      EDC_IAM_DID_WEB_USE_HTTPS: "false"
      EDC_CONNECTOR_NAME: registration-service
      EDC_IDENTITY_DID_URL: did:web:did-server:registration-service
      EDC_SELF_DESCRIPTION_DOCUMENT_PATH: /resources/self-description/registration-service/sdd.json
      EDC_VAULT: /resources/vault/registration-service/registration-service-vault.properties
      EDC_KEYSTORE: /resources/vault/registration-service/registration-service-keystore.jks
      EDC_KEYSTORE_PASSWORD: test123
      EDC_ERROR_RESPONSE_VERBOSE: "true"
    ports:
      - "8184:8184"
      - "8185:8181"
      - "5008:5008"
      - "7174:7171"
    volumes:
      - ./resources:/resources

  # cli-tools to help setup MVD environment e.g. registering participant to authority.
  cli-tools:
    container_name: cli-tools
    build:
      context: ./resources/cli-tools
    volumes:
      - ./resources:/resources
      - ../resources:/common-resources
    depends_on:
      company1:
        condition: service_healthy
      company2:
        condition: service_healthy
      company3:
        condition: service_healthy
      registration-service:
        condition: service_healthy

  # Data Dashboard (MVD UI) for participant company1
  company1-datadashboard:
    container_name: company1-datadashboard
    build:
      context: ~/Documents/GitHub/DataDashboard
    volumes:
      - ./resources/appconfig/company1:/usr/share/nginx/html/assets/config
    depends_on:
      company1:
        condition: service_healthy
    ports:
      - "7080:80"
    profiles: ["ui"]

    # Data Dashboard (MVD UI) for participant company2
  company2-datadashboard:
    container_name: company2-datadashboard
    build:
      context: ~/Documents/GitHub/DataDashboard
    volumes:
      - ./resources/appconfig/company2:/usr/share/nginx/html/assets/config
    depends_on:
      company2:
        condition: service_healthy
    ports:
      - "7081:80"
    profiles: ["ui"]

